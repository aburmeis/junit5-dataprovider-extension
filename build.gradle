buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'findbugs'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.7.3"
}
apply plugin: 'org.junit.platform.gradle.plugin'
apply from: 'versions.gradle'

sourceCompatibility = versions.java
targetCompatibility = versions.java

repositories {
    mavenCentral()
}

dependencies {
    compile "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
            "com.tngtech.java:junit-dataprovider:${versions.dataprovider}"
    testCompile "org.hamcrest:hamcrest-library:${versions.hamcrest}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

jacoco {
    toolVersion = versions.jacoco
}

jacocoTestReport {
    reports {
        html.enabled true
    }
}

findbugs {
    toolVersion = versions.findbugs
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jar {
    manifest {
        attributes('Implementation-Title': 'JUnit dataprovider extension',
                'Implementation-Version': version)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom.withXml {
                // adjust dependency scopes
                asNode().dependencies.'*'.each() {
                    it.scope*.value = 'compile'
                }
            }
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = 'aburmeis'
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/aburmeis/junit5-dataprovider-extension.git'
    }
    publications = ['mavenJava']
}

check.dependsOn jacocoTestCoverageVerification, jacocoTestReport

wrapper {
    gradleVersion = versions.gradle
}
